services:
  # terminate tls so we don't need to have exceptions in the nginx config file for development
  port-expose:
    image: nginx:1.27.3-alpine
    networks:
      - public-internet
      - internal

    restart: unless-stopped

    ports:
      - 8080:8080

    volumes:
      - ./port-expose/nginx_templates/:/etc/nginx/templates/

    environment:
      - INTERNETNL_DOMAINNAME
      - IPV4_IP_WEBSERVER_INTERNAL
      - IPV4_IP_RABBITMQ_INTERNAL

  app:
    # use image with npm included for CSS build
    build:
      target: app-dev
    # use Django runserver for better debug abilities during development
    entrypoint: ["/bin/sh"]
    # run CSS auto rebuild in the background and start devserver
    command: ["-c", "cd /src/frontend; npm run css:build:watch& cd /app; ./manage.py runserver 0.0.0.0:8080 $DEVSERVER_ARGS"]
    environment:
      - INTERNETNL_AUTORELOAD=True
    volumes:
      - batch_results:/app/batch_results
      # mount sources using volumes for quicker dev cycles
      - ../checks:/app/checks
      - ../interface:/app/interface
      - ../internetnl:/app/internetnl
      # only mount CSS files, not entire frontend, as it override the node_modules
      - ../frontend/css:/src/frontend/css

  worker:
    volumes:
      - batch_results:/app/batch_results
      # mount sources using volumes for quicker dev cycles
      - ../checks:/app/checks
      - ../interface:/app/interface
      - ../internetnl:/app/internetnl

  beat:
    volumes:
      # mount sources using volumes for quicker dev cycles
      - ../checks:/app/checks
      - ../interface:/app/interface
      - ../internetnl:/app/internetnl
